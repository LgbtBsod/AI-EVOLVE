#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∂–∏–º–∞ "–¢–≤–æ—Ä–µ—Ü –º–∏—Ä–∞"
"""

import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from src.core.constants import (
    WorldObjectType, ObjectCategory, ObjectState, CreatorMode, ToolType,
    WORLD_SETTINGS, CAMERA_SETTINGS, UI_SETTINGS, DEFAULT_OBJECT_TEMPLATES, UI_COLORS
)
from src.systems.ui.ui_system import UISystem, WorldObjectTemplate
from src.systems.world.world_manager import WorldManager, WorldObject

def test_constants():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –æ–±—ä–µ–∫—Ç–æ–≤
    print(f"–¢–∏–ø—ã –æ–±—ä–µ–∫—Ç–æ–≤: {[t.value for t in WorldObjectType]}")
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤: {[c.value for c in ObjectCategory]}")
    print(f"–°–æ—Å—Ç–æ—è–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤: {[s.value for s in ObjectState]}")
    print(f"–†–µ–∂–∏–º—ã —Å–æ–∑–¥–∞–Ω–∏—è: {[m.value for m in CreatorMode]}")
    print(f"–¢–∏–ø—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {[t.value for t in ToolType]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏—Ä–∞: {WORLD_SETTINGS}")
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã: {CAMERA_SETTINGS}")
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ UI: {UI_SETTINGS}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
    print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã: {list(DEFAULT_OBJECT_TEMPLATES.keys())}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–≤–µ—Ç–∞
    print(f"–¶–≤–µ—Ç–∞ UI: {list(UI_COLORS.keys())}")
    
    print()

def test_ui_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI —Å–∏—Å—Ç–µ–º—ã"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI —Å–∏—Å—Ç–µ–º—ã ===")
    
    ui_system = UISystem()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if ui_system.initialize():
        print("‚úÖ UI —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
        templates = ui_system.object_templates
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for category in ObjectCategory:
            category_templates = ui_system.get_available_templates(category)
            print(f"  {category.value}: {len(category_templates)} —à–∞–±–ª–æ–Ω–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã
        for obj_type in WorldObjectType:
            type_templates = ui_system.get_templates_by_type(obj_type)
            print(f"  {obj_type.value}: {len(type_templates)} —à–∞–±–ª–æ–Ω–æ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞
        if templates:
            first_template_id = list(templates.keys())[0]
            if ui_system.select_template(first_template_id):
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω: {ui_system.selected_template.name}")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = ui_system.get_creation_stats()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {stats}")
        
        # –û—á–∏—Å—Ç–∫–∞
        ui_system.cleanup()
        print("‚úÖ UI —Å–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å UI —Å–∏—Å—Ç–µ–º—É")
    
    print()

def test_world_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–∏—Ä–∞"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–∏—Ä–∞ ===")
    
    world_manager = WorldManager()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if world_manager.initialize():
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∏—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        test_object_data = {
            'id': 'test_wall_1',
            'template_id': 'wall',
            'type': WorldObjectType.OBSTACLE.value,
            'name': '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–µ–Ω–∞',
            'x': 5.0,
            'y': 3.0,
            'z': 0.0,
            'properties': {
                'width': 2.0,
                'height': 3.0,
                'depth': 0.5,
                'color': (0.5, 0.5, 0.5, 1.0)
            },
            'created_by': 'test',
            'creation_time': 1234567890.0
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç
        object_id = world_manager.add_world_object(test_object_data)
        if object_id:
            print(f"‚úÖ –û–±—ä–µ–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {object_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = world_manager.get_world_stats()
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏—Ä–∞: {stats}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
            objects_at_pos = world_manager.get_objects_at_position(5.0, 3.0, radius=2.0)
            print(f"‚úÖ –û–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–æ–∑–∏—Ü–∏–∏: {len(objects_at_pos)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–∏–∑–∏–∏
            colliding = world_manager.check_collision(4.0, 2.0, 2.0, 2.0)
            print(f"‚úÖ –û–±—ä–µ–∫—Ç–æ–≤ –≤ –∫–æ–ª–ª–∏–∑–∏–∏: {len(colliding)}")
            
            # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç
            if world_manager.remove_world_object(object_id):
                print("‚úÖ –û–±—ä–µ–∫—Ç —É–¥–∞–ª–µ–Ω")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç")
        
        # –û—á–∏—Å—Ç–∫–∞
        world_manager.cleanup()
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∏—Ä–∞ –æ—á–∏—â–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –º–∏—Ä–∞")
    
    print()

def test_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ===")
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—ã
    ui_system = UISystem()
    world_manager = WorldManager()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
    if ui_system.initialize() and world_manager.initialize():
        print("‚úÖ –°–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω
        templates = ui_system.get_available_templates(ObjectCategory.ENVIRONMENT)
        if templates:
            template = templates[0]
            print(f"‚úÖ –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω: {template.name}")
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞
            object_data = {
                'id': f"{template.template_id}_test",
                'template_id': template.template_id,
                'type': template.object_type.value,
                'name': template.name,
                'x': 10.0,
                'y': 5.0,
                'z': 0.0,
                'properties': template.properties.copy(),
                'created_by': 'integration_test',
                'creation_time': 1234567890.0
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∏—Ä
            object_id = world_manager.add_world_object(object_data)
            if object_id:
                print(f"‚úÖ –û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞: {object_id}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É UI
                ui_system.increment_creation_stat('objects_created')
                ui_system.increment_creation_stat('total_cost', template.cost)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                ui_stats = ui_system.get_creation_stats()
                world_stats = world_manager.get_world_stats()
                
                print(f"‚úÖ UI —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {ui_stats}")
                print(f"‚úÖ –ú–∏—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {world_stats}")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞")
        else:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤")
        
        # –û—á–∏—Å—Ç–∫–∞
        ui_system.cleanup()
        world_manager.cleanup()
        print("‚úÖ –°–∏—Å—Ç–µ–º—ã –æ—á–∏—â–µ–Ω—ã")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ '–¢–≤–æ—Ä–µ—Ü –º–∏—Ä–∞'")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
        test_constants()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º UI —Å–∏—Å—Ç–µ–º—É
        test_ui_system()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –º–∏—Ä–∞
        test_world_manager()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        test_integration()
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
