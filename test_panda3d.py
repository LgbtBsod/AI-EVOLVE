#!/usr/bin/env python3
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Panda3D –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–∫–Ω–æ–º
"""

import sys
import os

def test_panda3d_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç Panda3D"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Panda3D...")
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Panda3D
        print("üì¶ –ò–º–ø–æ—Ä—Ç Panda3D...")
        
        # –°–ø–æ—Å–æ–± 1: –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç
        try:
            from panda3d.core import ShowBase, WindowProperties
            print("‚úÖ –°–ø–æ—Å–æ–± 1: –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
            showbase_import = True
        except ImportError as e:
            print(f"‚ùå –°–ø–æ—Å–æ–± 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            showbase_import = False
        
        # –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ direct
        try:
            from direct.showbase.ShowBase import ShowBase
            print("‚úÖ –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ direct —É—Å–ø–µ—à–µ–Ω")
            direct_import = True
        except ImportError as e:
            print(f"‚ùå –°–ø–æ—Å–æ–± 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            direct_import = False
        
        if not showbase_import and not direct_import:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Panda3D")
            return False
        
        print("‚úÖ Panda3D –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
        print("\nü™ü –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–Ω–∞...")
        
        try:
            # –°–æ–∑–¥–∞–µ–º ShowBase
            print("üé¨ –°–æ–∑–¥–∞–Ω–∏–µ ShowBase...")
            base = ShowBase()
            print("‚úÖ ShowBase —Å–æ–∑–¥–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
            print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ ShowBase...")
            attrs = ['render', 'render2d', 'camera', 'win', 'taskMgr']
            for attr in attrs:
                if hasattr(base, attr):
                    value = getattr(base, attr)
                    print(f"   ‚úÖ {attr}: {type(value).__name__}")
                else:
                    print(f"   ‚ùå {attr}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–Ω–æ
            if hasattr(base, 'win'):
                win = base.win
                print(f"\nü™ü –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫–Ω–∞: {type(win).__name__}")
                
                if hasattr(win, 'isValid'):
                    is_valid = win.isValid()
                    print(f"   üìä –û–∫–Ω–æ –≤–∞–ª–∏–¥–Ω–æ: {is_valid}")
                
                if hasattr(win, 'getXSize') and hasattr(win, 'getYSize'):
                    width = win.getXSize()
                    height = win.getYSize()
                    print(f"   üìè –†–∞–∑–º–µ—Ä—ã: {width}x{height}")
                
                if hasattr(win, 'getTitle'):
                    title = win.getTitle()
                    print(f"   üè∑Ô∏è  –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
            else:
                print("‚ùå –û–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ü–µ–Ω—É
            print("\nüé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Å—Ü–µ–Ω—ã...")
            
            try:
                from panda3d.core import GeomNode, NodePath
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —É–∑–µ–ª
                test_node = GeomNode("test")
                test_np = base.render.attachNewNode(test_node)
                test_np.setPos(0, 0, 0)
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —É–∑–µ–ª —Å–æ–∑–¥–∞–Ω")
                
            except Exception as e:
                print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —É–∑–µ–ª: {e}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫
            print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞...")
            print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∏ –æ—Å—Ç–∞—Ç—å—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º!")
            print("   –î–ª—è –≤—ã—Ö–æ–¥–∞ –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            
            try:
                # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
                print("üé¨ –ó–∞–ø—É—Å–∫ base.run()...")
                base.run()
                print("‚úÖ base.run() –∑–∞–≤–µ—Ä—à–µ–Ω")
                
            except KeyboardInterrupt:
                print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
                import traceback
                traceback.print_exc()
                return False
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ShowBase: {e}")
            import traceback
            traceback.print_exc()
            return False
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_panda3d_alternatives():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    env_vars = ['PANDA_PRC_DIR', 'PANDA_LOG', 'PANDA_WINDOW_TITLE']
    for var in env_vars:
        value = os.environ.get(var)
        if value:
            print(f"   üìã {var}: {value}")
        else:
            print(f"   ‚ö†Ô∏è  {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...")
    modules = ['panda3d.core', 'direct.showbase', 'direct.gui', 'direct.task']
    for module in modules:
        try:
            __import__(module)
            print(f"   ‚úÖ {module}: –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"   ‚ùå {module}: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PANDA3D")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
    test_panda3d_alternatives()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    print("\n" + "=" * 60)
    print("üéØ –û–°–ù–û–í–ù–û–ô –¢–ï–°–¢")
    print("=" * 60)
    
    success = test_panda3d_basic()
    
    if success:
        print("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Panda3D —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")
        print("‚ùå Panda3D –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã")
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    main()
