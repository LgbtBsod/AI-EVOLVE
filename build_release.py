#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ —Ä–µ–ª–∏–∑–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã
"–≠–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ê–¥–∞–ø—Ç–∞—Ü–∏—è: –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –†–µ–∑–æ–Ω–∞–Ω—Å"
"""

import os
import sys
import shutil
import zipfile
from pathlib import Path
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


def create_release_directory():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–ª–∏–∑–∞"""
    release_dir = Path("release")
    if release_dir.exists():
        shutil.rmtree(release_dir)
    
    release_dir.mkdir()
    logger.info("–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–ª–∏–∑–∞")
    return release_dir


def copy_game_files(release_dir: Path):
    """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    logger.info("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    files_to_copy = [
        "main.py",
        "launcher.py", 
        "run_game.py",
        "requirements.txt",
        "README.md",
        "CHANGELOG.md"
    ]
    
    for file_name in files_to_copy:
        if Path(file_name).exists():
            shutil.copy2(file_name, release_dir / file_name)
            logger.info(f"–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω {file_name}")
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    dirs_to_copy = [
        "core",
        "ui", 
        "config",
        "graphics",
        "audio",
        "data"
    ]
    
    for dir_name in dirs_to_copy:
        if Path(dir_name).exists():
            shutil.copytree(dir_name, release_dir / dir_name)
            logger.info(f"–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_name}")


def create_batch_files(release_dir: Path):
    """–°–æ–∑–¥–∞–Ω–∏–µ batch —Ñ–∞–π–ª–æ–≤ –¥–ª—è Windows"""
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ batch —Ñ–∞–π–ª–æ–≤...")
    
    # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    start_bat = release_dir / "start_game.bat"
    with open(start_bat, 'w', encoding='utf-8') as f:
        f.write("""@echo off
title AI-EVOLVE: –≠–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ê–¥–∞–ø—Ç–∞—Ü–∏—è
echo üéÆ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã AI-EVOLVE...
python main.py
if %ERRORLEVEL% NEQ 0 (
    echo.
    echo ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    echo –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å install_dependencies.bat
    pause
)
""")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π  
    install_bat = release_dir / "install_dependencies.bat"
    with open(install_bat, 'w', encoding='utf-8') as f:
        f.write("""@echo off
title –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π AI-EVOLVE
echo üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...
python -m pip install --upgrade pip
python -m pip install -r requirements.txt
if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!
    echo –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å start_game.bat
) else (
    echo ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    echo –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
)
pause
""")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
    test_bat = release_dir / "test_systems.bat"
    with open(test_bat, 'w', encoding='utf-8') as f:
        f.write("""@echo off
title –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º AI-EVOLVE
echo üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º...
python main.py test
pause
""")
    
    logger.info("Batch —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")


def create_shell_scripts(release_dir: Path):
    """–°–æ–∑–¥–∞–Ω–∏–µ shell —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è Linux/macOS"""
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ shell —Å–∫—Ä–∏–ø—Ç–æ–≤...")
    
    # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    start_sh = release_dir / "start_game.sh"
    with open(start_sh, 'w', encoding='utf-8') as f:
        f.write("""#!/bin/bash
echo "üéÆ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã AI-EVOLVE..."
python3 main.py
if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å ./install_dependencies.sh"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
fi
""")
    start_sh.chmod(0o755)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_sh = release_dir / "install_dependencies.sh"  
    with open(install_sh, 'w', encoding='utf-8') as f:
        f.write("""#!/bin/bash
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python3 -m pip install --upgrade pip
python3 -m pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å ./start_game.sh"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
fi
read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
""")
    install_sh.chmod(0o755)
    
    logger.info("Shell —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã")


def create_documentation(release_dir: Path):
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    
    # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
    quick_start = release_dir / "QUICK_START.md"
    with open(quick_start, 'w', encoding='utf-8') as f:
        f.write("""# üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

## Windows
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `install_dependencies.bat`
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `start_game.bat`

## Linux/macOS  
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `./install_dependencies.sh`
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `./start_game.sh`

## –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
```bash
pip install -r requirements.txt
python main.py
```

## –†–µ–∂–∏–º—ã –∑–∞–ø—É—Å–∫–∞
- `python main.py` - –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- `python main.py test` - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º
- `python main.py demo` - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
- `python main.py console` - –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Python 3.8+
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
- –ó–∞–ø—É—Å—Ç–∏—Ç–µ `python main.py test` –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
""")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    requirements = release_dir / "SYSTEM_REQUIREMENTS.md"
    with open(requirements, 'w', encoding='utf-8') as f:
        f.write("""# üíª –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

## –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **–û–°**: Windows 10, macOS 10.14, Ubuntu 18.04
- **Python**: 3.8 –∏–ª–∏ –≤—ã—à–µ
- **–û–ó–£**: 2 –ì–ë
- **–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ**: 500 –ú–ë
- **–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞**: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ OpenGL 2.1

## –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è  
- **–û–°**: Windows 11, macOS 12+, Ubuntu 20.04+
- **Python**: 3.10 –∏–ª–∏ –≤—ã—à–µ
- **–û–ó–£**: 4 –ì–ë
- **–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ**: 1 –ì–ë
- **–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞**: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ OpenGL 3.0+

## –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∏–∑ requirements.txt:
- pygame >= 2.5.0
- numpy >= 1.24.0
- Pillow >= 10.0.0
- psutil >= 5.9.0

## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
–ó–∞–ø—É—Å—Ç–∏—Ç–µ `python main.py test` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
""")
    
    logger.info("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")


def create_archive(release_dir: Path):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ä–µ–ª–∏–∑–∞"""
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...")
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    archive_name = f"AI-EVOLVE_v1.0.0_{timestamp}.zip"
    
    with zipfile.ZipFile(archive_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(release_dir):
            for file in files:
                file_path = Path(root) / file
                arc_name = file_path.relative_to(release_dir.parent)
                zipf.write(file_path, arc_name)
    
    logger.info(f"–°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: {archive_name}")
    return archive_name


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏"""
    print("üèóÔ∏è –°–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–Ω–æ–π –≤–µ—Ä—Å–∏–∏ AI-EVOLVE")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–µ–ª–∏–∑–∞
        release_dir = create_release_directory()
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
        copy_game_files(release_dir)
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞
        create_batch_files(release_dir)
        create_shell_scripts(release_dir)
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
        create_documentation(release_dir)
        
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
        archive_name = create_archive(release_dir)
        
        print("\n‚úÖ –†–µ–ª–∏–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {release_dir}")
        print(f"üì¶ –ê—Ä—Ö–∏–≤: {archive_name}")
        print("\nüéØ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é!")
        
        return 0
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return 1


if __name__ == "__main__":
    sys.exit(main())
