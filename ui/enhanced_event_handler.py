#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π Enhanced Edition –¥–ª—è GameInterface.
–í—ã–¥–µ–ª–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞.
"""

import logging

logger = logging.getLogger(__name__)


class EnhancedEventHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π Enhanced Edition"""
    
    def __init__(self, game_interface):
        self.game_interface = game_interface
    
    def handle_enhanced_event(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –æ—Ç Enhanced Game Master"""
        event_type = event.get("type")
        
        if event_type == "emotion_trigger":
            self._handle_emotion_trigger(event)
        elif event_type == "risk_factor_added":
            self._handle_risk_factor_added(event)
        elif event_type == "skill_learned":
            self._handle_skill_learned(event)
        elif event_type == "curse_applied":
            self._handle_curse_applied(event)
        elif event_type == "blessing_applied":
            self._handle_blessing_applied(event)
        elif event_type == "evolution_event":
            self._handle_evolution_event(event)
        else:
            logger.debug(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ Enhanced —Å–æ–±—ã—Ç–∏–µ: {event_type}")
    
    def _handle_emotion_trigger(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —ç–º–æ—Ü–∏–∏"""
        if hasattr(self.game_interface, 'emotion_system') and self.game_interface.emotion_system:
            self.game_interface.emotion_system.trigger_emotion(
                event["emotion_code"],
                event.get("intensity", 1.0),
                event.get("source", "enhanced_system")
            )
            logger.info(f"üòä –≠–º–æ—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: {event['emotion_code']}")
    
    def _handle_risk_factor_added(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∞ —Ä–∏—Å–∫–∞"""
        logger.info(f"üéØ –§–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω: {event['factor_name']}")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
    
    def _handle_skill_learned(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∏–∑—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞"""
        logger.info(f"üìö –ù–∞–≤—ã–∫ –∏–∑—É—á–µ–Ω: {event['skill_id']}")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å UI –Ω–∞–≤—ã–∫–æ–≤
    
    def _handle_curse_applied(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∫–ª—è—Ç–∏—è"""
        curse_type = event.get("curse_type", "unknown")
        logger.info(f"üé≠ –ü—Ä–æ–∫–ª—è—Ç–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: {curse_type}")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–∫–ª—è—Ç–∏–∏
    
    def _handle_blessing_applied(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è"""
        blessing_type = event.get("blessing_type", "unknown")
        logger.info(f"‚ú® –ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: {blessing_type}")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–∏
    
    def _handle_evolution_event(self, event: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —ç–≤–æ–ª—é—Ü–∏–∏"""
        if (hasattr(self.game_interface, 'enhanced_game_master') and 
            self.game_interface.enhanced_game_master and 
            self.game_interface.player):
            
            evolution_result = self.game_interface.enhanced_game_master.trigger_evolution_event(
                "player", 
                {
                    "required_experience": 100,
                    "current_experience": getattr(self.game_interface.player, 'experience', 150),
                    "combat_experience": 50,
                    "learning_points": 30,
                    "survival_time": getattr(self.game_interface, "elapsed_time", 1800)
                }
            )
            
            if evolution_result.get("success"):
                evolution_name = evolution_result.get("evolution_name", "Unknown")
                logger.info(f"üß¨ –≠–≤–æ–ª—é—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {evolution_name}")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é —ç–≤–æ–ª—é—Ü–∏–∏
