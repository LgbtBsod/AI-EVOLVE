#!/usr/bin/env python3
"""
AI-EVOLVE: –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏
"""

import sys
import os
import time
import subprocess
from pathlib import Path

def print_header():
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print("üéÆ" * 20)
    print("üéÆ AI-EVOLVE: –≠–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –ê–î–ê–ü–¢–ê–¶–ò–Ø üéÆ")
    print("üéÆ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –†–µ–∑–æ–Ω–∞–Ω—Å - –î–µ–º–æ-–≤–µ—Ä—Å–∏—è üéÆ")
    print("üéÆ" * 20)
    print()

def print_menu():
    """–í—ã–≤–æ–¥ –º–µ–Ω—é"""
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:")
    print("   1. üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("   2. üéÆ –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ-–≤–µ—Ä—Å–∏—é")
    print("   3. üöÄ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Ç–µ—Å—Ç—ã + –¥–µ–º–æ")
    print("   4. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞")
    print("   5. üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    print("   0. ‚ùå –í—ã—Ö–æ–¥")
    print()

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    required_files = [
        "src/systems/testing/integration_tester.py",
        "src/systems/testing/test_runner.py",
        "src/systems/integration/system_integrator.py",
        "src/demo/demo_launcher.py",
        "src/core/architecture/__init__.py",
        "src/core/game_engine.py"
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
    
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:")
        for file_path in missing_files:
            print(f"   - {file_path}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    return True

def run_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        result = subprocess.run([
            sys.executable, 
            "src/systems/testing/test_runner.py"
        ], capture_output=True, text=True, cwd=os.getcwd())
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.stdout:
            print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:", result.stderr)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤: {e}")
        return False

def run_demo():
    """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏"""
    print("üéÆ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏...")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ
        result = subprocess.run([
            sys.executable, 
            "src/demo/demo_launcher.py"
        ], capture_output=True, text=True, cwd=os.getcwd())
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.stdout:
            print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:", result.stderr)
        
        if result.returncode == 0:
            print("‚úÖ –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ: {e}")
        return False

def show_project_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üìä –°–¢–ê–¢–£–° –ü–†–û–ï–ö–¢–ê AI-EVOLVE")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    components = {
        "–ë–∞–∑–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞": "src/core/architecture/",
        "–ò–≥—Ä–æ–≤–æ–π –¥–≤–∏–∂–æ–∫": "src/core/game_engine.py",
        "–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏": "src/systems/integration/",
        "UI —Å–∏—Å—Ç–µ–º–∞": "src/systems/ui/",
        "HUD —Å–∏—Å—Ç–µ–º–∞": "src/systems/ui/hud_system.py",
        "–ë–æ–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞": "src/systems/combat/",
        "–°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤—å—è": "src/systems/health/",
        "–°–∏—Å—Ç–µ–º–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è": "src/systems/inventory/",
        "–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤—ã–∫–æ–≤": "src/systems/skills/",
        "–°–∏—Å—Ç–µ–º–∞ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤": "src/systems/effects/",
        "–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": "src/systems/testing/",
        "–î–µ–º–æ-–≤–µ—Ä—Å–∏—è": "src/demo/"
    }
    
    total_components = len(components)
    available_components = 0
    
    for name, path in components.items():
        if os.path.exists(path):
            print(f"   ‚úÖ {name}")
            available_components += 1
        else:
            print(f"   ‚ùå {name}")
    
    print()
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {available_components}/{total_components} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
    progress_percent = (available_components / total_components * 100) if total_components > 0 else 0
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: {progress_percent:.1f}%")
    
    if progress_percent >= 95:
        print("üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏!")
    elif progress_percent >= 80:
        print("üöÄ –ü—Ä–æ–µ–∫—Ç –±–ª–∏–∑–æ–∫ –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é!")
    elif progress_percent >= 60:
        print("‚ö° –ü—Ä–æ–µ–∫—Ç –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    else:
        print("üîß –ü—Ä–æ–µ–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏!")

def run_full_cycle():
    """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Ç–µ—Å—Ç—ã + –¥–µ–º–æ"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: —Ç–µ—Å—Ç—ã + –¥–µ–º–æ")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    if not check_dependencies():
        print("‚ùå –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.")
        return False
    
    print()
    
    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    print("üìã –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    if not run_tests():
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞.")
        return False
    
    print()
    
    # –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –¥–µ–º–æ
    print("üìã –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏")
    if not run_demo():
        print("‚ùå –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞.")
        return False
    
    print()
    print("üéâ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header()
    
    while True:
        print_menu()
        
        try:
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (0-5): ").strip()
            
            if choice == "0":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            elif choice == "1":
                run_tests()
            elif choice == "2":
                run_demo()
            elif choice == "3":
                run_full_cycle()
            elif choice == "4":
                show_project_status()
            elif choice == "5":
                check_dependencies()
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            
        except KeyboardInterrupt:
            print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\n" + "=" * 50 + "\n")

if __name__ == "__main__":
    main()
