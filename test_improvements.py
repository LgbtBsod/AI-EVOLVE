#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —É—Ç–∏–ª–∏—Ç—ã fix_python_files.py
"""

from fix_python_files import (
    backup_manager,
    analyze_file_damage,
    smart_repair_strategy,
    get_repair_statistics,
    print_repair_statistics
)

def test_damage_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç 1: –ó–¥–æ—Ä–æ–≤—ã–π —Ñ–∞–π–ª
    healthy_content = '''def test():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    return True

if __name__ == "__main__":
    test()
'''
    
    report = analyze_file_damage(healthy_content)
    print(f"  ‚úÖ –ó–¥–æ—Ä–æ–≤—ã–π —Ñ–∞–π–ª: {report['damage_score']}/100")
    print(f"     –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {report['recommendations']}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    damaged_content = '''def test(
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    return True

if __name__ == "__main__":
    test()
'''
    
    report = analyze_file_damage(damaged_content)
    print(f"  ‚ùå –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {report['damage_score']}/100")
    print(f"     –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {report['recommendations']}")
    
    # –¢–µ—Å—Ç 3: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    critical_content = '''def test
    return True

if __name__ == "__main__":
    test()
'''
    
    report = analyze_file_damage(critical_content)
    print(f"  üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π: {report['damage_score']}/100")
    print(f"     –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {report['recommendations']}")

def test_backup_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π."""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π...")
    
    print(f"  üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤: {backup_manager.backup_dir}")
    print(f"  üìã –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏: {backup_manager.integrity_dir}")
    print(f"  üìä –ú–∞–∫—Å–∏–º—É–º –±—ç–∫–∞–ø–æ–≤ –Ω–∞ —Ñ–∞–π–ª: {backup_manager.max_backups_per_file}")
    print(f"  üìÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç: {backup_manager.max_backup_age_days} –¥–Ω–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    backup_manager.get_backup_status()

def test_repair_strategy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–º–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π."""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç —Å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º
    damaged_content = '''def test(
    return True

if __name__ == "__main__":
    test()
'''
    
    print("  üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è...")
    damage_report = analyze_file_damage(damaged_content)
    
    print("  üö® –ü—Ä–∏–º–µ–Ω—è—é —É–º–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é...")
    try:
        # –ó–¥–µ—Å—å –º—ã –Ω–µ –º–æ–∂–µ–º —Ä–µ–∞–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
        print(f"     –û—Ü–µ–Ω–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π: {damage_report['damage_score']}/100")
        print(f"     –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: {damage_report['recommendations'][0]}")
    except Exception as e:
        print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

def test_statistics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_repair_statistics()
    print(f"  üìÅ –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print_repair_statistics()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —É—Ç–∏–ª–∏—Ç—ã")
    print("=" * 50)
    
    try:
        test_damage_analysis()
        test_backup_manager()
        test_repair_strategy()
        test_statistics()
        
        print("\n" + "=" * 50)
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –£—Ç–∏–ª–∏—Ç–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
